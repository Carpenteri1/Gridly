name: Create new release for project

on:
  push:
    branches: 
          - '*'
          
jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This grants write access to the repository contents

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build the application
      run: dotnet build --configuration Release

    - name: Publish Windows and Linux version
      run: |
        dotnet publish -r win-x64 -c Release --self-contained -p:PublishSingleFile=true
        dotnet publish -r linux-x64 -c Release --self-contained -p:PublishSingleFile=true

    - name: Install tools
      run: | 
        sudo apt-get install -y zip
        
    - name: Package Windows build into ZIP
      run: |
          cd /bin/Release/net8.0/
          TAG_VERSION=v$(jq -r .version Gridly-Client/package.json)
          ZIP_WINDOWS_NAME="Gridly-Windows-$TAG_VERSION.zip"
          zip -r $ZIP_WINDOWS_NAME /win-x64
          echo "ZIP_WINDOWS_NAME=$ZIP_WINDOWS_NAME" >> $GITHUB_ENV
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
      
    - name: Package Linux build into ZIP
      run: |
          cd /bin/Release/net8.0/
          ZIP_Linux_NAME="Gridly-Linux-${{ env.TAG_VERSION }}.zip"
          zip -r $ZIP_Linux_NAME /linux-x64
          echo "ZIP_Linux_NAME=$ZIP_Linux_NAME" >> $GITHUB_ENV
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          
    - name: Create Git tag with package version
      run: |
        git tag $TAG_VERSION
        git push origin $TAG_VERSION 
        echo "new tag $TAG_VERSION created and pushed"
        
    - name: Upload tarball to GitHub Releases    
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          ${{ env.ZIP_WINDOWS_NAME }}
          ${{ env.ZIP_Linux_NAME }}
        # Upload the tarball as a release asset
        
        tag_name: ${{ env.TAG_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
