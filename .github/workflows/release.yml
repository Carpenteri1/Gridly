name: Angular Release Workflow

on:
  push:
    branches: 
          - '*'
#  push:
#    tags:
#      - 'v*'  # Matches tags like v1.0, v2.0, etc.
 
jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This grants write access to the repository contents

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET 8
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build the application
      run: dotnet build --configuration Release

    - name: Publish the application
      run: dotnet publish --configuration Release --output ./publish

    - name: debug files
      run: echo "ls"
    
    - name: Install zip utility
      run: sudo apt-get install -y zip

    - name: Package build into ZIP
      run: |
          TAG_VERSION=v$(jq -r .version Gridly-Client/package.json)
          ZIP_NAME="Gridly-$TAG_VERSION.zip"
          zip -r publish/$ZIP_NAME ./publish
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          
    - name: Create Git tag with package version
      run: |
        git tag $TAG_VERSION
        git push origin $TAG_VERSION 
        echo "new tag $TAG_VERSION created and pushed"
        
    - name: Upload tarball to GitHub Releases    
      uses: softprops/action-gh-release@v1
      with:
        files: project/${{ env.ZIP_NAME }}  # Upload the tarball as a release asset
        tag_name: ${{ env.TAG_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
